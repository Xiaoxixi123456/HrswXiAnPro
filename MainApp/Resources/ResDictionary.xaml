<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:local="clr-namespace:MainApp.Resources" 
                    xmlns:Convertors="clr-namespace:MainApp.Convertors" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
    <Convertors:PartBackgroundConverter x:Key="PartBackgroundConverter"/>
    <Convertors:PartLedMultiConverter x:Key="PartLedMultiConverter"/>
    <Convertors:TrayBackgroundConverter x:Key="TrayBackgroundConverter"/>
    <Convertors:TrayStatusConverter x:Key="TrayStatusConverter"/>
    <Convertors:PartResultMultiConverter x:Key="PartResultMultiConverter"/>
    <Convertors:PartStatusConverter x:Key="PartStatusConverter"/>
    <Convertors:TreeTrayItemConverter x:Key="TreeTrayItemConverter"/>
    <Convertors:TreePartItemConverter x:Key="TreePartItemConverter"/>
    <Convertors:PlacedStatusConverter x:Key="PlacedStatusConverter"/>
    <Convertors:CmmOnOfflineConverter x:Key="CmmOnOfflineConverter"/>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        <UniformGrid IsItemsHost="True" 
                     Columns="{Binding CurrentTray.ColumnCount}"
                     Rows="{Binding CurrentTray.RowCount}"/>
    </ItemsPanelTemplate>
    <DataTemplate x:Key="CmmPartDataTemplate">
        <StackPanel Orientation="Vertical">
            <Ellipse Width="20" Height="20" Stroke="Black" Margin="0,3" >
                <Ellipse.Fill>
                    <MultiBinding Converter="{StaticResource PartLedMultiConverter}">
                        <Binding Path="Status"/>
                        <Binding Path="Flag"/>
                    </MultiBinding>
                </Ellipse.Fill>
            </Ellipse>
            <Label Content="{Binding Id}"/>
        </StackPanel>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="TrayUIItemsPanelTemplate">
        <UniformGrid IsItemsHost="True" 
                     Columns="{Binding ColumnCount}" 
                     Rows="{Binding RowCount}" Margin="3"/>
    </ItemsPanelTemplate>
    <DataTemplate x:Key="PartDataTemplate">
        <StackPanel Margin="3" Background="{Binding Status, Converter={StaticResource PartBackgroundConverter}}">
            <TextBlock Text="{Binding Name}"/>
            <TextBlock Text="{Binding Id}"/>
        </StackPanel>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="ItemsPanelTemplate2">
        <UniformGrid IsItemsHost="True"
                     Columns="{Binding Tray.ColumnCount}"
                     Rows="{Binding Tray.RowCount}"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="RackItemsPanelTemplate">
        <UniformGrid IsItemsHost="True"
                     Columns="{Binding ColumnCount}"
                     Rows="{Binding RowCount}"/>
    </ItemsPanelTemplate>
    <DataTemplate x:Key="TrayDataTemplate">
        <Border Background="{Binding Status, Converter={StaticResource TrayBackgroundConverter}}"
                BorderBrush="Black" 
                BorderThickness="1"
                CornerRadius="2" 
                Margin="4">
            <StackPanel Background="LightBlue">
                <BulletDecorator >
                    <BulletDecorator.Bullet>
                        <Label Content="料盘编号" Width="100"/>
                    </BulletDecorator.Bullet>
                    <TextBlock Text="{Binding TrayNb}" 
                               VerticalAlignment="Center"/>
                </BulletDecorator>
                <BulletDecorator >
                    <BulletDecorator.Bullet>
                        <Label Content="料盘类别" Width="100"/>
                    </BulletDecorator.Bullet>
                    <TextBlock Text="{Binding Category}" 
                               VerticalAlignment="Center"/>
                </BulletDecorator>
                <BulletDecorator >
                    <BulletDecorator.Bullet>
                        <Label Content="三坐标编号" Width="100"/>
                    </BulletDecorator.Bullet>
                    <TextBlock Text="{Binding CmmNo}" 
                               VerticalAlignment="Center"/>
                </BulletDecorator>
                <BulletDecorator >
                    <BulletDecorator.Bullet>
                        <Label Content="零件个数" Width="100"/>
                    </BulletDecorator.Bullet>
                    <TextBlock Text="{Binding PartCount}" 
                               VerticalAlignment="Center"/>
                </BulletDecorator>
            </StackPanel>
        </Border>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="CmmItemsPanelTemplate">
        <UniformGrid IsItemsHost="True"
                     Columns="2"
                     Rows="1"/>
    </ItemsPanelTemplate>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
    <Style x:Key="PartsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Flag}" Value="1">
                            <Setter Property="Background" Value="Yellow"/>
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding Flag}" Value="0">
                            <Setter Property="Background" Value="Blue"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid x:Name="headerPanel" Rows="1" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="Border" Margin="0,0,0,0" Background="Transparent" BorderBrush="Black"  BorderThickness="1,1,1,1">
                            <!--<ContentPresenter x:Name="ContentSite"  VerticalAlignment="Center"  HorizontalAlignment="Center" ContentSource="Header" Margin="4,12,4,4" RecognizesAccessKey="True">
                                <ContentPresenter.
                                -->
                            <!--<ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </ContentPresenter.LayoutTransform>-->
                            <!--
                            </ContentPresenter>-->
                            <Label Content="{TemplateBinding Header}" 
                                   FontSize="18"
                                   FontWeight="ExtraBold"
                                   Background="#FFDFCFE0" 
                                   Foreground="#FF4D5051"
                                   HorizontalContentAlignment="Center"
                                   />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#d0e5f7" Offset="0"/>
                                        <GradientStop Color="#48b0e2" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                                    Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Silver"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CmmLedCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUnchecked}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUnchecked}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUnchecked}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="6,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Rectangle x:Name="rcgle" RadiusX="2" RadiusY="2" Width="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" Height="{TemplateBinding FontSize}" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="rcgle" Property="Fill" Value="LightGreen"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="rcgle" Property="Fill" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>